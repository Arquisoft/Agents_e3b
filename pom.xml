<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.uniovi.asw.e3b</groupId>
	<artifactId>agents_e3b</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Agents_e3b</name>
	<description>Módulo de consulta y gestión de agentes</description>
	<url>https://github.com/Arquisoft/Agents_e3b/</url>
	<organization>
		<name>Escuela de Ingeniería Informática de la Universidad de Oviedo</name>
		<url>https://ingenieriainformatica.uniovi.es/</url>
	</organization>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.7.RELEASE</version>
	</parent>

	<properties>
		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
		<project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd-HH:mm</maven.build.timestamp.format>
		<java.version>1.8</java.version>
		<jdk.version>1.8</jdk.version>
		<argLine>-XX:MaxPermSize=512m</argLine>
		<surefire.argLine>${argLine}</surefire.argLine>
		<failsafe.argLine>${argLine}</failsafe.argLine>
		<start-class>es.uniovi.asw.e3b.agents_e3b.Application</start-class>
		<postgresql.version>9.1-901-1.jdbc4</postgresql.version>
		<opencsv.version>4.1</opencsv.version>
		<json-unit-fluent.version>1.28.2</json-unit-fluent.version>
		<jacoco-maven-plugin.version>0.8.0</jacoco-maven-plugin.version>
		<docker-maven-plugin-fabric8.version>0.24.0</docker-maven-plugin-fabric8.version>
		<maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
		<maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
		<maven-javadoc-plugin.version>3.0.0</maven-javadoc-plugin.version>
		<findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
		<maven-pmd-plugin.version>3.9.0</maven-pmd-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>

		<docker.registry.address>arquisoft.ddns.net</docker.registry.address>
		<docker.base.image>maven:3.5-jdk-8-alpine</docker.base.image>
		<docker.backend.network.name>backend_network</docker.backend.network.name>

		<postgres.docker.alias>postgres</postgres.docker.alias>
		<postgres.docker.image>${postgres.docker.alias}:alpine</postgres.docker.image>
		<postgres.server.port>5432</postgres.server.port>
		<postgres.user>postgres</postgres.user>
		<postgres.password>changeit</postgres.password>
		<postgres.db>${postgres.user}</postgres.db>

		<agents.docker.alias>${project.artifactId}</agents.docker.alias>
		<agents.docker.image>${docker.registry.address}/${agents.docker.alias}</agents.docker.image>
		<agents.server.port>8090</agents.server.port>
		<agents.cvs.filepathname>tipo_agentes.csv</agents.cvs.filepathname>

		<server.port>${agents.server.port}</server.port>
		<spring.datasource.url>jdbc:postgresql://${postgres.docker.alias}:${postgres.server.port}/${postgres.db}</spring.datasource.url>
		<spring.datasource.username>${postgres.user}</spring.datasource.username>
		<spring.datasource.password>${postgres.password}</spring.datasource.password>
		<spring.datasource.driverClassName>org.postgresql.Driver</spring.datasource.driverClassName>
		<spring.jpa.database-platform>org.hibernate.dialect.PostgreSQLDialect</spring.jpa.database-platform>
		<spring.jpa.hibernate.ddl-auto>create-drop</spring.jpa.hibernate.ddl-auto>
		<csv.filepathname>${agents.cvs.filepathname}</csv.filepathname>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit-fluent</artifactId>
			<version>${json-unit-fluent.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>${encoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin-fabric8.version}</version>
				<configuration>
					<logDate>none</logDate>
					<userColor>true</userColor>
					<imagePullPolicy>IfNotPresent</imagePullPolicy>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<image>
							<alias>${postgres.docker.alias}</alias>
							<name>${postgres.docker.image}</name>
							<run>
								<env>
									<POSTGRES_USER>${postgres.user}</POSTGRES_USER>
									<POSTGRES_PASSWORD>${postgres.password}</POSTGRES_PASSWORD>
									<POSTGRES_DB>${postgres.db}</POSTGRES_DB>
								</env>
								<ports>
									<port>${postgres.server.port}:${postgres.server.port}</port>
								</ports>
								<network>
									<mode>custom</mode>
									<name>${docker.backend.network.name}</name>
									<alias>${postgres.docker.alias}</alias>
								</network>
								<wait>
									<log>^.*database system is ready to accept connections.*$</log>
									<time>30000</time>
								</wait>
								<log>
									<enabled>true</enabled>
									<prefix>%a [%C] |</prefix>
									<color>blue</color>
								</log>
							</run>
						</image>
						<image>
							<alias>${agents.docker.alias}</alias>
							<name>${agents.docker.image}</name>
							<build>
								<from>${docker.base.image}</from>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
								<assembly>
									<inline>
										<fileSets>
											<fileSet>
												<directory>${project.build.directory}</directory>
												<includes>
													<include>${project.artifactId}-${project.version}.${project.packaging}</include>
												</includes>
												<outputDirectory>usr/share/${project.artifactId}/</outputDirectory>
											</fileSet>
										</fileSets>
									</inline>
								</assembly>
								<ports>
									<port>${agents.server.port}</port>
								</ports>
								<entryPoint>
									<arg>/usr/bin/java</arg>
									<arg>-Djava.security.egd=file:/dev/./urandom</arg>
									<arg>-jar</arg>
									<arg>/maven/usr/share/${project.artifactId}/${project.artifactId}-${project.version}.${project.packaging}</arg>
								</entryPoint>
							</build>
							<run>
								<env>
									<SERVER_PORT>${server.port}</SERVER_PORT>
									<SPRING_DATASOURCE_URL>${spring.datasource.url}</SPRING_DATASOURCE_URL>
									<SPRING_DATASOURCE_USERNAME>${spring.datasource.username}</SPRING_DATASOURCE_USERNAME>
									<SPRING_DATASOURCE_PASSWORD>${spring.datasource.password}</SPRING_DATASOURCE_PASSWORD>
									<SPRING_DATASOURCE_DRIVERCLASSNAME>${spring.datasource.driverClassName}</SPRING_DATASOURCE_DRIVERCLASSNAME>
									<SPRING_JPA_DATABASE_PLATFORM>${spring.jpa.database-platform}</SPRING_JPA_DATABASE_PLATFORM>
									<SPRING_JPA_HIBERNATE_DDL_AUTO>${spring.jpa.hibernate.ddl-auto}</SPRING_JPA_HIBERNATE_DDL_AUTO>
									<CSV_FILEPATHNAME>${csv.filepathname}</CSV_FILEPATHNAME>
								</env>
								<ports>
									<port>${agents.server.port}:${agents.server.port}</port>
								</ports>
								<network>
									<mode>custom</mode>
									<name>${docker.backend.network.name}</name>
									<alias>${agents.docker.alias}</alias>
								</network>
								<volumes>
									<bind>
										<volume>/tmp</volume>
									</bind>
								</volumes>
								<dependsOn>
									<container>${postgres.docker.alias}</container>
								</dependsOn>
								<wait>
									<url>http://${docker.host.address}:${agents.server.port}</url>
									<time>90000</time>
								</wait>
								<log>
									<enabled>true</enabled>
									<prefix>%a [%C] |</prefix>
									<color>cyan</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<printSummary>true</printSummary>
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>%regex[.*IntegrationTests?\..*]</exclude>
						<exclude>**/*UAT.java</exclude>
						<exclude>%regex[.*AcceptanceTests?\..*]</exclude>
					</excludes>
					<runOrder>alphabetical</runOrder>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<printSummary>true</printSummary>
					<includes>
						<include>**/*IT.java</include>
						<include>%regex[.*IntegrationTests?\..*]</include>
						<include>**/*UAT.java</include>
						<include>%regex[.*AcceptanceTests?\..*]</include>
					</includes>
					<runOrder>alphabetical</runOrder>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**com.steadystate*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>jacoco*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin.version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>

</project>
